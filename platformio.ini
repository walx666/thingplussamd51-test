; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[version]
FWVersionMajor = 0
FWVersionMinor = 0
FWVersionBuild = 1
custom_fwversion = ${version.FWVersionMajor}.${version.FWVersionMinor}.${version.FWVersionBuild}

[platformio]
default_envs = samd51_thingplus

[env]
build_flags =
	-Wl,-u_printf_float
	-DFWVersionMajor=${version.FWVersionMajor}
	-DFWVersionMinor=${version.FWVersionMinor}
	-DFWVersionBuild=${version.FWVersionBuild}
	-DVERSION=${version.custom_fwversion}
;	-D USE_TINYUSB
;	-D DEBUG=1
;	-DARDUINO_USB_MODE=1
;	-DARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	michael-uray/muTimer@ ^0.1.1
;	robtillaart/I2C_EEPROM@ ^1.7.1
	https://github.com/sparkfun/SparkFun_SPI_SerialFlash_Arduino_Library#v1.0.3
	https://github.com/sparkfun/SparkFun_External_EEPROM_Arduino_Library#v3.2.3
;	https://github.com/arduino-libraries/Scheduler
;	https://github.com/arkhipenko/TaskScheduler
;	evert-arias/EasyButton @ ^2.0.1
extra_scripts = 
	post:postBuild.py
	pre:preBuild.py
debug_build_flags =
;	-L. -larm_cortexM4lf_math


[env:samd51_thingplus]
platform = atmelsam
board = sparkfun_samd51_thing_plus
framework = arduino
;upload_port = com34
;monitor_port = com33
upload_protocol = sam-ba
build_flags =
    ${env.build_flags}
	-larm_cortexM4lf_math
lib_deps = 
	${env.lib_deps}
extra_scripts = 
	${env.extra_scripts}


[env:samd51_micromod]
platform = atmelsam
board = sparkfun_samd51_micromod
framework = arduino
upload_protocol = sam-ba
build_flags =
    ${env.build_flags}
	-larm_cortexM4lf_math
lib_deps = 
	${env.lib_deps}
extra_scripts = 
	${env.extra_scripts}


[env:f405_micromod]
platform = ststm32
board = sparkfun_micromod_f405
framework = arduino
upload_protocol = dfu
monitor_port = com36 ;com5
monitor_speed = 115200
build_flags =
    ${env.build_flags}
	-D I2C_BUFFER_LENGTH_RX=32
	-D I2C_BUFFER_LENGTH_TX=32
	-D SERIAL_TX_BUFFER_SIZE=4096
	-D SERIAL_RX_BUFFER_SIZE=4096
	-D USBCON
	;-D ENABLE_USB_MASS_STORAGE
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
	;-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
lib_deps = 
	${env.lib_deps}
extra_scripts = 
	${env.extra_scripts}

[env:nucleo_l432kc]
platform = ststm32
board = nucleo_l432kc
framework = arduino
upload_protocol = stlink
monitor_port = com40
monitor_speed = 115200
build_flags =
    ${env.build_flags}
	;-D ARDUINO_GENERIC_
	-D I2C_BUFFER_LENGTH_RX=32
	-D I2C_BUFFER_LENGTH_TX=32
lib_deps = 
	${env.lib_deps}
extra_scripts = 
	${env.extra_scripts}


[env:samd21_feather_m0e]
platform = atmelsam
board = adafruit_feather_m0_express
framework = arduino
upload_protocol = sam-ba
build_flags =
    ${env.build_flags}
	-D USE_TINYUSB
lib_deps = 
	${env.lib_deps}
	adafruit/Adafruit NeoPixel
extra_scripts = 
	${env.extra_scripts}


[env:qtpy_m0] 
platform = atmelsam
board = adafruit_qt_py_m0
framework = arduino
upload_protocol = sam-ba
build_flags =
    ${env.build_flags}
	-D I2C_BUFFER_LENGTH_RX=32
	-D I2C_BUFFER_LENGTH_TX=32
	-D USE_TINYUSB=0
#	-DUseScheduler
lib_deps = 
	${env.lib_deps}
	adafruit/Adafruit NeoPixel
extra_scripts = 
	${env.extra_scripts}


[env:mkrwan1310]
platform = atmelsam
board = mkrwan1310
framework = arduino
upload_protocol = sam-ba
build_flags =
    ${env.build_flags}
lib_deps = 
	${env.lib_deps}
extra_scripts = 
	${env.extra_scripts}


;[env:lolin32]
;platform = espressif32
;board = lolin32
;framework = arduino
;upload_protocol = esptool
;build_flags =
;    ${env.build_flags}
;lib_deps = 
;	${env.lib_deps}
;extra_scripts = 
;	${env.extra_scripts}